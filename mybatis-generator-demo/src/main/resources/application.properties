######################################################global start######################################################
# 生成文件的输出目录
global.outputDir=E:\\mybatis-generator\\mybatis-generator\\mybatis-generator-demo
# 是否覆盖已有文件
global.fileOverride=true
# 是否打开输出目录
global.open=false
# 是否在xml中添加二级缓存配置
global.enableCache=false
# 开发人员
global.author=libo
# 开启 Kotlin 模式
global.kotlin=false
# 开启 swagger2 模式
global.swagger2=false
# 开启 ActiveRecord 模式
global.activeRecord=false
# 开启 BaseResultMap
global.baseResultMap=true
# 时间类型对应策略
global.dateType=TIME_PACK
# 开启 baseColumnList
global.baseColumnList=true
# 各层文件名称方式，例如： %sAction 生成 UserAction，%s 为占位符
global.entityName =
#global.mapperName = %sMapper
global.voName=%sVO
global.mapperXmlName=%sMapper
global.extendMapperXmlName=%sExtendMapper
global.serviceName=%sService
global.serviceImplName=%sServiceImpl
global.controllerName=%sController
# 指定生成的主键的ID类型
global.idType=AUTO
#######################################################global end#######################################################
####################################################datasource start####################################################
datasource.dbType = MYSQL
# 驱动连接的URL
datasource.url=jdbc:mysql://10.101.0.102:3306/scm?useSSL=false
# 驱动名称
datasource.driverName=org.gjt.mm.mysql.Driver
# 数据库连接用户名
datasource.username=root
# 数据库连接密码
datasource.password=111111
#####################################################datasource end#####################################################
#####################################################strategy start#####################################################
# 是否大写命名
strategy.isCapitalMode=false
# 是否跳过视图
strategy.skipView=false
# 数据库表映射到实体的命名策略
strategy.underlineToCamelTableName=true
# 数据库表字段映射到实体的命名策略<br/>未指定按照 naming 执行
strategy.underlineToCamelColumnNames=true
# 表前缀，多个以逗号隔开
strategy.tablePrefix=
# 字段前缀，多个以逗号隔开
#strategy.fieldPrefix=username,email
# 自定义继承的Entity类全称，带包名
#strategy.superEntityClass=com.baomidou.mybatisplus.extension.domain.BaseDomain
# 自定义基础的Entity类，公共字段
#strategy.superEntityColumns=test_id,test_name
# 自定义继承的Mapper类全称，带包名
#strategy.superMapperClass=
# 自定义继承的Service类全称，带包名
strategy.superServiceClass=
# 自定义继承的ServiceImpl类全称，带包名
strategy.superServiceImplClass=
# 自定义继承的Controller类全称，带包名
strategy.superControllerClass=
# 需要包含的表名，允许正则表达式（与exclude二选一配置），多个以逗号隔开
strategy.includeTables=store_transaction
strategy.includeTablePrefixs=
# 需要排除的表名，允许正则表达式，多个以逗号隔开
strategy.excludeTables=
# 【实体】是否为构建者模型（默认 false）
# public User setName(String name) { this.name = name return this }
strategy.entityBuilderModel=false
# 【实体】是否为lombok模型（默认 false）<br>
strategy.entityLombokModel=false
# Boolean类型字段是否移除is前缀（默认 false）<br>
# 比如 : 数据库字段名称 : 'is_xxx',类型为 : tinyint. 在映射实体的时候则会去掉is,在实体类中映射最终结果为 xxx
strategy.entityBooleanColumnRemoveIsPrefix=false
# 生成 @RestController控制器
strategy.restControllerStyle=false
# 驼峰转连字符
# @RequestMapping("/managerUserActionHistory") -> @RequestMapping("/manager-user-action-history")
strategy.controllerMappingHyphenStyle=false
# 是否生成实体时，生成字段注解
strategy.entityTableFieldAnnotationEnable=false
# 乐观锁属性名称
#strategy.versionFieldName=
# 逻辑删除属性名称
#strategy.logicDeleteFieldName=
# 表填充字段
#strategy.tableFillList=
######################################################strategy end######################################################
######################################################package start#####################################################
# 父包名。如果为空，将下面子包名必须写全部， 否则就只需写子包名
package.parent=com.juma.scm
# 父包模块名
package.moduleName=storage
# Entity包名
package.entity=domain
# VO包名
package.vo=vo
# Service包名
package.service=service
# Service Impl包名
package.serviceImpl=service.impl
# Mapper包名
package.mapper=mapper
# Mapper XML包名
package.mapperXml=mybatis
package.extendMapperXml=extend
# Controller包名
package.controller=controller
#######################################################package end######################################################
#####################################################template start#####################################################
template.entity=/templates/entity.java.ftl
template.vo=/templates/vo.java.ftl
template.service=/templates/service.java.ftl
template.serviceImpl=/templates/serviceImpl.java.ftl
template.mapper=/templates/mapper.java.ftl
template.mapperXml=/templates/mapper.xml.ftl
template.extendMapperXml=/templates/extend.mapper.xml.ftl
template.controller=/templates/controller.java.ftl
#####################################################template end#######################################################


